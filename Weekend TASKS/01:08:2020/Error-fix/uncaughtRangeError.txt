*Uncaught RangeError: Maximum call stack

This is an error that occurs in Chrome under a couple of circumstances. 
One is when you call a recursive function that does not terminate. 
You can test this in the Chrome Developer Console.

var a = new Array(1);
function recurse(a){
    a[0] = new Array(1);
    recurse(a[0]);
}
recurse(a);

output:
Uncaught RangeError: Maximum call stack size exceeded.

It may also happen if you pass a value to a function that is out of range. Many functions 
accept only a specific range of numbers for their input values. For example, 
Number.toExponential(digits) and Number.toFixed(digits) accept digits from 0 to 100, and 
Number.toPrecision(digits) accepts digits from 1 to 100.

var a = new Array(4294967295);  //OK
var b = new Array(-1); //range error

var num = 2.555555;
document.writeln(num.toExponential(4));  //OK
document.writeln(num.toExponential(-2)); //range error!

num = 2.9999;
document.writeln(num.toFixed(2));   //OK
document.writeln(num.toFixed(105));  //range error!

num = 2.3456;
document.writeln(num.toPrecision(1));   //OK
document.writeln(num.toPrecision(0));  //range error!